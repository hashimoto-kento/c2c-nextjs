import { Metadata } from 'next';
import { notFound } from 'next/navigation';

interface UserPageProps {
  params: {
    id: string;
  };
}

export const metadata = ({ params }: UserPageProps): Metadata => ({
  title: `User ${params.id} Profile`,
});

export async function generateStaticParams() {
  const response = await fetch('https://jsonplaceholder.typicode.com/users');
  const users = await response.json();

  if(!users) return null;

  return users.map((user: { id: number }) => ({
    id: user.id.toString(),
  }));
}

export default async function UserPage({ params }: UserPageProps) {
  const { id } = params;
  const response = await fetch(`https://jsonplaceholder.typicode.com/users/${id}`);

  if (response.status === 404) return notFound();

  const user = await response.json();

  if(!user) return notFound();

  return (
    <div>
      <main>
        <p>
          This page is generated by Server-Side Rendering.
        </p>
        <p>
          The user ID is {id}.
        </p>
        <p>
          Email: {user.email}
        </p>
      </main>
    </div>
  );
}