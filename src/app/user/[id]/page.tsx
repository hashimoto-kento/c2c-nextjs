import { Metadata } from "next";
import { notFound } from "next/navigation";
import Link from "next/link";

interface UserPageProps {
  params: Promise<{
    id: string;
  }>;
}

interface MetadataProps {
  params: Promise<{
    id: string;
  }>;
}

export const metadata = async ({
  params,
}: MetadataProps): Promise<Metadata> => {
  const resolvedParams = await params;
  const title = resolvedParams?.id ? `User ${resolvedParams.id} Profile` : "User Profile";
  return {
    title,
    description: "User profile page",
  };
};

export async function generateStaticParams() {
  const response = await fetch("https://jsonplaceholder.typicode.com/users");
  const users = await response.json();

  if (!users) return [];

  return users.map((user: { id: number }) => ({
    id: user.id.toString(),
  }));
}

export default async function UserPage({ params }: UserPageProps) {
  // const resolvedParams = await params;
  const { id } = await params;

  const response = await fetch(
    `https://jsonplaceholder.typicode.com/users/${id}`
  );

  if (response.status === 404) return notFound();

  const user = await response.json();

  if (!user) return notFound();

  return (
    <div>
      <main>
        <p>This page is generated by Server-Side Rendering.</p>
        <p>The user ID is {id}.</p>
        <p>Email: {user.email}</p>
        <Link href="/">
          <p>Home</p>
        </Link>
      </main>
    </div>
  );
}
